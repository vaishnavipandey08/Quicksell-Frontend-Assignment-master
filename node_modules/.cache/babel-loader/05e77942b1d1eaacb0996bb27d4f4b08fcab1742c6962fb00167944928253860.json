{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pande\\\\Downloads\\\\Quicksell-Frontend-Assignment-master (1)\\\\Quicksell-Frontend-Assignment-master\\\\src\\\\components\\\\Kanban.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/Kanban.css';\nimport Navbar from './Topbar';\nimport Title from './Names';\nimport Card from './Card';\nimport Order from './Order';\nimport DATA from './Items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kanban() {\n  _s();\n  const [currentGrouping, setCurrentGrouping] = useState(localStorage.getItem('grouping') || 'status');\n  const [currentOrdering, setCurrentOrdering] = useState(localStorage.getItem('ordering') || 'title');\n  useEffect(() => {\n    localStorage.setItem('ordering', currentOrdering);\n  }, [currentOrdering]);\n  useEffect(() => {\n    localStorage.setItem('grouping', currentGrouping);\n  }, [currentGrouping]);\n  useEffect(() => {\n    if (currentGrouping === 'priority') {\n      setCurrentOrdering('title');\n    }\n  }, [currentGrouping]);\n\n  // Get sorted group columns based on current grouping\n  const retrieveSortedGroups = () => {\n    const columns = DATA[currentGrouping];\n    if (currentGrouping === 'priority') {\n      const priorityLevels = ['No priority', 'Urgent', 'High', 'Medium', 'Low'];\n      return columns.sort((first, second) => priorityLevels.indexOf(first.title) - priorityLevels.indexOf(second.title));\n    }\n    return columns;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      grouping: currentGrouping,\n      ordering: currentOrdering,\n      setGrouping: setCurrentGrouping,\n      setOrdering: setCurrentOrdering\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: retrieveSortedGroups().map(column => {\n        var _DATA$users$find;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-column\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            title: column.title,\n            grouping: currentGrouping,\n            count: column.tickets.length,\n            available: currentGrouping === 'user' ? (_DATA$users$find = DATA.users.find(user => user.name === column.title)) === null || _DATA$users$find === void 0 ? void 0 : _DATA$users$find.available : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), Order(column.tickets, currentOrdering).map(task => /*#__PURE__*/_jsxDEV(Card, {\n            ticket: task,\n            grouping: currentGrouping,\n            user: DATA.users.find(user => user.id === task.userId)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))]\n        }, column.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Kanban, \"NvSZEUIM/+vWG4qHUddSemtf7IM=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Title","Card","Order","DATA","jsxDEV","_jsxDEV","Kanban","_s","currentGrouping","setCurrentGrouping","localStorage","getItem","currentOrdering","setCurrentOrdering","setItem","retrieveSortedGroups","columns","priorityLevels","sort","first","second","indexOf","title","className","children","grouping","ordering","setGrouping","setOrdering","fileName","_jsxFileName","lineNumber","columnNumber","map","column","_DATA$users$find","count","tickets","length","available","users","find","user","name","task","ticket","id","userId","_c","$RefreshReg$"],"sources":["C:/Users/pande/Downloads/Quicksell-Frontend-Assignment-master (1)/Quicksell-Frontend-Assignment-master/src/components/Kanban.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles/Kanban.css';\nimport Navbar from './Topbar';\nimport Title from './Names';\nimport Card from './Card';\nimport Order from './Order';\nimport DATA from './Items';\n\nfunction Kanban() {\n  const [currentGrouping, setCurrentGrouping] = useState(localStorage.getItem('grouping') || 'status');\n  const [currentOrdering, setCurrentOrdering] = useState(localStorage.getItem('ordering') || 'title');\n\n  useEffect(() => {\n    localStorage.setItem('ordering', currentOrdering);\n  }, [currentOrdering]);\n\n  useEffect(() => {\n    localStorage.setItem('grouping', currentGrouping);\n  }, [currentGrouping]);\n\n  useEffect(() => {\n    if (currentGrouping === 'priority') {\n      setCurrentOrdering('title');\n    }\n  }, [currentGrouping]);\n\n  // Get sorted group columns based on current grouping\n  const retrieveSortedGroups = () => {\n    const columns = DATA[currentGrouping];\n    if (currentGrouping === 'priority') {\n      const priorityLevels = ['No priority', 'Urgent', 'High', 'Medium', 'Low'];\n      return columns.sort((first, second) => priorityLevels.indexOf(first.title) - priorityLevels.indexOf(second.title));\n    }\n    return columns;\n  };\n\n  return (\n    <div className='page'>\n      <Navbar\n        grouping={currentGrouping}\n        ordering={currentOrdering}\n        setGrouping={setCurrentGrouping}\n        setOrdering={setCurrentOrdering}\n      />\n      <div className='board'>\n        {retrieveSortedGroups().map((column) => (\n          <div className='group-column' key={column.title}>\n            <Title\n              title={column.title}\n              grouping={currentGrouping}\n              count={column.tickets.length}\n              available={currentGrouping === 'user' ? DATA.users.find((user) => user.name === column.title)?.available : null}\n            />\n            {Order(column.tickets, currentOrdering).map((task) => (\n              <Card\n                key={task.id}\n                ticket={task}\n                grouping={currentGrouping}\n                user={DATA.users.find((user) => user.id === task.userId)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Kanban;\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}